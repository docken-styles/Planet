import type { _SERVICE as ConsoleActor, InitAssetKey as ConsoleInitAssetKey, InitUploadResult as ConsoleInitUploadResult } from '/home/mdocken/Planet/node_modules/@junobuild/console/declarations/console/console.did';
import type { _SERVICE as SatelliteActor, InitAssetKey as SatelliteInitAssetKey, InitUploadResult as SatelliteInitUploadResult } from '../../../../core/declarations/satellite/satellite.did';
import type { Storage } from '../types/storage.types';
export type UploadAsset = Required<Omit<Storage, 'token' | 'encoding' | 'description'>> & Pick<Storage, 'token' | 'encoding' | 'description'>;
export declare const uploadAsset: ({ asset: { data, filename, collection, headers, token, fullPath, encoding, description }, actor, init_asset_upload }: {
    asset: UploadAsset;
    actor: SatelliteActor | ConsoleActor;
    init_asset_upload: (initAssetKey: SatelliteInitAssetKey | ConsoleInitAssetKey) => Promise<SatelliteInitUploadResult | ConsoleInitUploadResult>;
}) => Promise<void>;
